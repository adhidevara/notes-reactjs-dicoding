{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adhi0\\\\notes-reactjs-dicoding\\\\src\\\\components\\\\Input.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    type,\n    name,\n    value,\n    onChange,\n    placeholder\n  } = _ref;\n\n  const handleChange = event => {\n    if (name === \"title\") {\n      const text = event.target.value;\n      onChange(text.length <= 50 ? text : value);\n    } else {\n      onChange(event.target.value);\n    }\n  };\n\n  const inputProps = {\n    name,\n    value,\n    onChange: handleChange,\n    spellCheck: false,\n    placeholder\n  };\n  return type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", { ...inputProps,\n    className: \"note-input__body\",\n    rows: 5\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"input\", { ...inputProps,\n    className: \"note-input__title\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/adhi0/notes-reactjs-dicoding/src/components/Input.jsx"],"names":["Input","type","name","value","onChange","placeholder","handleChange","event","text","target","length","inputProps","spellCheck"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,QAAkD;AAAA,MAAjD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,GAAiD;;AAC9D,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIL,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAMM,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAA1B;AACAC,MAAAA,QAAQ,CAACI,IAAI,CAACE,MAAL,IAAe,EAAf,GAAoBF,IAApB,GAA2BL,KAA5B,CAAR;AACD,KAHD,MAGO;AACLC,MAAAA,QAAQ,CAACG,KAAK,CAACE,MAAN,CAAaN,KAAd,CAAR;AACD;AACF,GAPD;;AASA,QAAMQ,UAAU,GAAG;AACjBT,IAAAA,IADiB;AAEjBC,IAAAA,KAFiB;AAGjBC,IAAAA,QAAQ,EAAEE,YAHO;AAIjBM,IAAAA,UAAU,EAAE,KAJK;AAKjBP,IAAAA;AALiB,GAAnB;AAQA,SAAOJ,IAAI,KAAK,UAAT,gBACL,yBAAcU,UAAd;AAA0B,IAAA,SAAS,EAAC,kBAApC;AAAuD,IAAA,IAAI,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,sBAAWA,UAAX;AAAuB,IAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CAvBD;;KAAMX,K;AAyBN,eAAeA,KAAf","sourcesContent":["const Input = ({ type, name, value, onChange, placeholder }) => {\r\n  const handleChange = (event) => {\r\n    if (name === \"title\") {\r\n      const text = event.target.value;\r\n      onChange(text.length <= 50 ? text : value);\r\n    } else {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  const inputProps = {\r\n    name,\r\n    value,\r\n    onChange: handleChange,\r\n    spellCheck: false,\r\n    placeholder,\r\n  };\r\n\r\n  return type === \"textarea\" ? (\r\n    <textarea {...inputProps} className=\"note-input__body\" rows={5} />\r\n  ) : (\r\n    <input {...inputProps} className=\"note-input__title\" />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}