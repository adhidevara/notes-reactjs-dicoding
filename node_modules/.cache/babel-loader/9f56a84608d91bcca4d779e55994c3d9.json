{"ast":null,"code":"import Swal from \"sweetalert2\";\n\nconst handleClick = _ref => {\n  let {\n    title,\n    text,\n    icon\n  } = _ref;\n  Swal.fire({\n    title,\n    text,\n    icon,\n    showConfirmButton: false,\n    timer: 3000\n  });\n};\n\nconst handleClickConfirm = (item, action, type, title, text, icon, confirmButtonText) => {\n  Swal.fire({\n    title: title,\n    text: text,\n    icon: icon,\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: confirmButtonText\n  }).then(result => {\n    if (type === \"delete\") {\n      if (result.isConfirmed) {\n        action(notes => notes.filter(note => note.id !== item));\n        Swal.fire(\"Deleted!\", \"Your Note has been Deleted.\", \"success\");\n      }\n    } else if (type === \"archive\" || type === \"unarchive\") {\n      if (result.isConfirmed) {\n        action(notes => notes.map(note => {\n          if (note.id === item) {\n            return { ...note,\n              archived: !note.archived\n            };\n          }\n\n          return note;\n        }));\n\n        if (type === \"archive\") {\n          Swal.fire(\"Archived!\", \"The Note has been Archived.\", \"success\");\n        } else {\n          Swal.fire(\"Unrchived!\", \"The Note has been Unrchived.\", \"success\");\n        }\n      }\n    }\n  });\n};\n\nexport { handleClick, handleClickConfirm };","map":{"version":3,"sources":["C:/Users/adhi0/Notes-ReactJS/src/components/Alert.jsx"],"names":["Swal","handleClick","title","text","icon","fire","showConfirmButton","timer","handleClickConfirm","item","action","type","confirmButtonText","showCancelButton","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","notes","filter","note","id","map","archived"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,WAAW,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAA0B;AAC7CJ,EAAAA,IAAI,CAACK,IAAL,CAAU;AACRH,IAAAA,KADQ;AAERC,IAAAA,IAFQ;AAGRC,IAAAA,IAHQ;AAIRE,IAAAA,iBAAiB,EAAE,KAJX;AAKRC,IAAAA,KAAK,EAAE;AALC,GAAV;AAOD,CARD;;AAUA,MAAMC,kBAAkB,GAAG,CACzBC,IADyB,EAEzBC,MAFyB,EAGzBC,IAHyB,EAIzBT,KAJyB,EAKzBC,IALyB,EAMzBC,IANyB,EAOzBQ,iBAPyB,KAQtB;AACHZ,EAAAA,IAAI,CAACK,IAAL,CAAU;AACRH,IAAAA,KAAK,EAAEA,KADC;AAERC,IAAAA,IAAI,EAAEA,IAFE;AAGRC,IAAAA,IAAI,EAAEA,IAHE;AAIRS,IAAAA,gBAAgB,EAAE,IAJV;AAKRC,IAAAA,kBAAkB,EAAE,SALZ;AAMRC,IAAAA,iBAAiB,EAAE,MANX;AAORH,IAAAA,iBAAiB,EAAEA;AAPX,GAAV,EAQGI,IARH,CAQSC,MAAD,IAAY;AAClB,QAAIN,IAAI,KAAK,QAAb,EAAuB;AACrB,UAAIM,MAAM,CAACC,WAAX,EAAwB;AACtBR,QAAAA,MAAM,CAAES,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYb,IAAnC,CAAZ,CAAN;AACAT,QAAAA,IAAI,CAACK,IAAL,CAAU,UAAV,EAAsB,6BAAtB,EAAqD,SAArD;AACD;AACF,KALD,MAKO,IAAIM,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,WAAnC,EAAgD;AACrD,UAAIM,MAAM,CAACC,WAAX,EAAwB;AACtBR,QAAAA,MAAM,CAAES,KAAD,IACLA,KAAK,CAACI,GAAN,CAAWF,IAAD,IAAU;AAClB,cAAIA,IAAI,CAACC,EAAL,KAAYb,IAAhB,EAAsB;AACpB,mBAAO,EAAE,GAAGY,IAAL;AAAWG,cAAAA,QAAQ,EAAE,CAACH,IAAI,CAACG;AAA3B,aAAP;AACD;;AACD,iBAAOH,IAAP;AACD,SALD,CADI,CAAN;;AAQA,YAAIV,IAAI,KAAK,SAAb,EAAwB;AACtBX,UAAAA,IAAI,CAACK,IAAL,CAAU,WAAV,EAAuB,6BAAvB,EAAsD,SAAtD;AACD,SAFD,MAEO;AACLL,UAAAA,IAAI,CAACK,IAAL,CAAU,YAAV,EAAwB,8BAAxB,EAAwD,SAAxD;AACD;AACF;AACF;AACF,GA/BD;AAgCD,CAzCD;;AA2CA,SAASJ,WAAT,EAAsBO,kBAAtB","sourcesContent":["import Swal from \"sweetalert2\";\r\n\r\nconst handleClick = ({ title, text, icon }) => {\r\n  Swal.fire({\r\n    title,\r\n    text,\r\n    icon,\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n  });\r\n};\r\n\r\nconst handleClickConfirm = (\r\n  item,\r\n  action,\r\n  type,\r\n  title,\r\n  text,\r\n  icon,\r\n  confirmButtonText\r\n) => {\r\n  Swal.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: icon,\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: confirmButtonText,\r\n  }).then((result) => {\r\n    if (type === \"delete\") {\r\n      if (result.isConfirmed) {\r\n        action((notes) => notes.filter((note) => note.id !== item));\r\n        Swal.fire(\"Deleted!\", \"Your Note has been Deleted.\", \"success\");\r\n      }\r\n    } else if (type === \"archive\" || type === \"unarchive\") {\r\n      if (result.isConfirmed) {\r\n        action((notes) =>\r\n          notes.map((note) => {\r\n            if (note.id === item) {\r\n              return { ...note, archived: !note.archived };\r\n            }\r\n            return note;\r\n          })\r\n        );\r\n        if (type === \"archive\") {\r\n          Swal.fire(\"Archived!\", \"The Note has been Archived.\", \"success\");\r\n        } else {\r\n          Swal.fire(\"Unrchived!\", \"The Note has been Unrchived.\", \"success\");\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport { handleClick, handleClickConfirm };\r\n"]},"metadata":{},"sourceType":"module"}